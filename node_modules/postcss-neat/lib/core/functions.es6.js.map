{"version":3,"sources":["core/functions.es6.js"],"names":[],"mappings":"AAAA;;;;;AAEA,IAAI,YAAY;;;AAEd,oCAAsB;QAAX,8DAAQ,iBAAG;;AACpB,YAAQ,CAAC,KAAD,CADY;AAEpB,YAAU,SAAS,CAAT,GAAa,CAAC,QAAQ,GAAR,CAAD,CAAc,OAAd,CAAsB,CAAtB,CAAb,GAAwC,KAAxC,OAAV,CAFoB;GAFR;;;;AAQd,gCAAW;AACT,WAAO;AACL,eAAS,CAAT;AACA,2BAAqB;AACnB,mBAAW,KAAX;AACA,mBAAW,OAAX;OAFF;AAIA,iBAAW;AACT,iBAAS,MAAT;OADF;KANF,CADS;GARG;CAAZ;;AAsBJ,YAAY,OAAO,MAAP,CAAc,SAAd,EAAyB;;;;AAGnC,sCAAa,QAAQ;AACnB,WAAO;AACL,iBAAW,WAAW,KAAX,GAAmB,OAAnB,GAA6B,MAA7B;AACX,yBAAmB,WAAW,KAAX,GAAmB,MAAnB,GAA4B,OAA5B;KAFrB,CADmB;GAHc;;;;AAWnC,gCAAU,SAAS,kBAAkB,QAAQ,QAAQ;AACnD,cAAU,CAAC,OAAD,CADyC;AAEnD,uBAAmB,CAAC,gBAAD,CAFgC;AAGnD,aAAS,CAAC,OAAO,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAD,CAH0C;AAInD,aAAS,CAAC,OAAO,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAD,CAJ0C;;AAMnD,QAAI,WAAW,UAAU,MAAV,GAAmB,CAAC,UAAU,CAAV,CAAD,GAAgB,MAAhB,CANiB;AAOnD,QAAI,oBAAoB,mBAAmB,MAAnB,GAA4B,CAAC,mBAAmB,CAAnB,CAAD,GAAyB,MAAzB,CAPD;;AASnD,WAAO,WAAW,iBAAX;AAT4C,GAXlB;;;;AAwBnC,kCAAW,kBAAkB,QAAQ,QAAQ;AAC3C,uBAAmB,CAAC,gBAAD,CADwB;AAE3C,aAAS,CAAC,OAAO,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAD,CAFkC;AAG3C,aAAS,CAAC,OAAO,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAD,CAHkC;;AAK3C,QAAI,oBAAoB,mBAAmB,MAAnB,GAA4B,CAAC,mBAAmB,CAAnB,CAAD,GAAyB,MAAzB,CALT;;AAO3C,WAAO,SAAS,iBAAT;AAPoC,GAxBV;CAAzB,CAAZ;;kBAmCe","file":"core/functions.es6.js","sourcesContent":["'use strict';\n\nlet functions = {\n  // Convert to percentage\n  percentage(value = 0) {\n    value = +value;\n    return `${value <= 1 ? (value * 100).toFixed(8) : value}%`;\n  },\n\n  // Simple clearfix\n  clearfix() {\n    return {\n      '*zoom': 1,\n      '&:before, &:after': {\n        'content': '\" \"',\n        'display': 'table'\n      },\n      '&:after': {\n        'clear': 'both'\n      }\n    };\n  }\n};\n\nfunctions = Object.assign(functions, {\n  // Sets layout direction and layout opposite direction to `@direction`\n  // and `@opposite-direction` accordingly.\n  getDirection(layout) {\n    return {\n      direction: layout === 'LTR' ? 'right' : 'left',\n      oppositeDirection: layout === 'LTR' ? 'left' : 'right'\n    };\n  },\n\n  // Sets neat grid column's width to `@column-width`.\n  flexWidth(columns, containerColumns, column, gutter) {\n    columns = +columns;\n    containerColumns = +containerColumns;\n    column = +column.replace('em', '');\n    gutter = +gutter.replace('em', '');\n\n    var tmpWidth = columns * column + (columns - 1) * gutter;\n    var tmpContainerWidth = containerColumns * column + (containerColumns - 1) * gutter;\n\n    return tmpWidth / tmpContainerWidth; // columnWidth\n  },\n\n  // Sets neat grid column's gutter (the white space between two columns) to `@column-gutter`.\n  flexGutter(containerColumns, column, gutter) {\n    containerColumns = +containerColumns;\n    column = +column.replace('em', '');\n    gutter = +gutter.replace('em', '');\n\n    var tmpContainerWidth = containerColumns * column + (containerColumns - 1) * gutter;\n\n    return gutter / tmpContainerWidth; // columnGutter\n  }\n});\n\nexport default functions;\n"],"sourceRoot":"/source/"}